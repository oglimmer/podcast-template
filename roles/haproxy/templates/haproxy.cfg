global
  log /dev/log  local0
  log /dev/log  local1 notice
  chroot /var/lib/haproxy
  stats socket /run/haproxy/admin.sock mode 660 level admin
  stats timeout 30s
  user haproxy
  group haproxy
  daemon

  # Default SSL material locations
  ca-base /etc/ssl/certs
  crt-base /etc/ssl/private

  # Default ciphers to use on SSL-enabled listening sockets.
  # For more information, see ciphers(1SSL). This list is from:
  #  https://hynek.me/articles/hardening-your-web-servers-ssl-ciphers/
  ssl-default-bind-ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS
  ssl-default-bind-options no-sslv3

defaults
  log global
  mode http
  maxconn 4096
  option forwardfor
  option http-server-close
  timeout connect 5s
  timeout client  50s
  timeout server  50s
  # Long timeout for WebSocket connections.
  timeout tunnel 1h

frontend all
  bind *:80
  bind *:443 ssl crt /etc/letsencrypt/live/{{ rdns }}/fullchainandkey.pem
  reqadd X-Forwarded-Proto:\ https if { ssl_fc }
  # Etherpad
  acl is_notes  hdr_end(host) -i notes.{{ rdns }}
  # manager/status pages
  acl local_network src 127.0.0.1
  acl restricted_page_1 path_beg /server-status
  block if restricted_page_1 !local_network
  # no http allowed - uncomment next line to enforce https
  # redirect scheme https if ! { ssl_fc }
  use_backend nodejs          if is_notes
  default_backend apache

frontend stats
  bind :1936 ssl crt /etc/letsencrypt/live/{{ rdns }}/fullchainandkey.pem
  default_backend stats

backend nodejs
  #option httpchk HEAD /
  server nodejs1 127.0.0.1:9001
  errorfile 503 /etc/haproxy/errors/503.http

backend apache
  option httpchk HEAD /
  server apache1 127.0.0.1:8090 check
  errorfile 503 /etc/haproxy/errors/503.http

backend stats
  stats enable
  stats hide-version
  stats realm Haproxy Statistics
  stats uri /
  stats auth {{ htpasswd.webstats.name }}:{{ htpasswd.webstats.pass }}

